/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import backend.*;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
/**
 *
 * @author BLU-RAY
 */
public class NotificationsPanel extends javax.swing.JFrame {
    private ArrayList<Notification> Notifications;
    private User user;
    private RequestHandler requestHandler;
    /**
     * Creates new form NotificationsPanel
     */
    public NotificationsPanel(User user, ArrayList<Notification> Notifications,RequestHandler requestHandler) {
        initComponents();
        this.requestHandler = requestHandler;
        this.Notifications = Notifications;
        this.user = user;
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        populateNotifications();
        //jPanel1.add();
    }

    private void populateNotifications() {
        DefaultListModel<String> listModel = new DefaultListModel<>(); //list with notifications that should apper for this specific user

        for (Notification notification : Notifications) {
            String displayText = String.format("[%s] %s: %s",
                    notification.getTimestamp(),
                    notification.getType(),
                    notification.getText()
            );
            if (notification.getReceivers().contains(user.getUserId())) //filtering
                listModel.addElement(displayText);
        }

        JList<String> notificationList = new JList<>(listModel);
        notificationList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        notificationList.setVisibleRowCount(10);//testing ba3deen
        JScrollPane scrollPane = new JScrollPane(notificationList);
        jPanel1.removeAll();
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(scrollPane, BorderLayout.CENTER);

        JPanel buttonPanel = new JPanel();
        JButton acceptButton = new JButton("Accept");
        JButton declineButton = new JButton("Decline");
        buttonPanel.setVisible(false);
        buttonPanel.add(acceptButton);
        buttonPanel.add(declineButton);
        jPanel1.add(buttonPanel, BorderLayout.SOUTH);
        jPanel1.revalidate();
        jPanel1.repaint();
        notificationList.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedIndex = notificationList.getSelectedIndex();
                if (selectedIndex != -1) {
                    Notification selectedNotification = Notifications.get(selectedIndex);

                    // Mark notification as read
                    selectedNotification.MarkAsRead(user.getUserId());
                    populateNotifications(); // Refresh notifications

                    // Show buttons if notification type is "Friend"
                    if ("Friend".equalsIgnoreCase(selectedNotification.getType())) {
                        buttonPanel.setVisible(true);

                        // Add action for "Accept" button
                        acceptButton.addActionListener(event -> {
                            //requestHandler.acceptFriendRequest(user,sender);
                            Notifications.remove(selectedNotification); // Remove after handling
                            populateNotifications(); // Refresh notifications
                        });

                        // Add action for "Decline" button
                        declineButton.addActionListener(event -> {
                            //requestHandler.declineFriendRequest(user,sender);
                            Notifications.remove(selectedNotification); // Remove after handling
                            populateNotifications(); // Refresh notifications
                        });
                    } else {
                        buttonPanel.setVisible(false);
                    }
                }
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 386, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   /* public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotificationsPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotificationsPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotificationsPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotificationsPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
           /* public void run() {
                new NotificationsPanel(new User(),NotificationDatabase.getInstance()).setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
